#!/bin/bash

# Verificar e corrigir microservi√ßo
SERVER="root@96.43.96.30"

echo "üîß VERIFICANDO E CORRIGINDO MICROSERVI√áO"
echo "========================================"
echo ""

ssh $SERVER << 'ENDSSH'
set -e

echo "1. Status do microservi√ßo:"
echo "-------------------------"
systemctl status team-manager-ai --no-pager | head -15

echo -e "\n2. Verificando se est√° escutando na porta 3001:"
echo "-----------------------------------------------"
netstat -tlnp | grep 3001 || ss -tlnp | grep 3001 || echo "‚ùå N√£o est√° escutando na porta 3001"

echo -e "\n3. Logs recentes do servi√ßo:"
echo "-----------------------------"
journalctl -u team-manager-ai -n 30 --no-pager

echo -e "\n4. Verificando arquivo .env do microservi√ßo:"
echo "--------------------------------------------"
if [ -f /var/www/team-manager-ai/.env ]; then
    echo "‚úÖ .env existe"
    grep -E "SUPABASE_URL|PORT" /var/www/team-manager-ai/.env
else
    echo "‚ùå .env n√£o existe!"
fi

echo -e "\n5. Tentando iniciar manualmente para debug:"
echo "-------------------------------------------"
cd /var/www/team-manager-ai
echo "Conte√∫do do diret√≥rio:"
ls -la

echo -e "\nVerificando package.json:"
if [ -f package.json ]; then
    cat package.json | grep -A 5 '"scripts"'
else
    echo "‚ùå package.json n√£o existe!"
fi

echo -e "\n6. Reiniciando o servi√ßo:"
echo "-------------------------"
systemctl restart team-manager-ai
sleep 5

echo -e "\n7. Verifica√ß√£o ap√≥s restart:"
echo "----------------------------"
if systemctl is-active --quiet team-manager-ai; then
    echo "‚úÖ Servi√ßo est√° ativo"
    
    # Testar health endpoint
    echo "Testando health endpoint:"
    curl -s http://localhost:3001/health | python3 -m json.tool || echo "‚ùå Health endpoint n√£o responde"
    
    # Testar via nginx
    echo -e "\nTestando via nginx:"
    curl -s https://admin.sixquasar.pro/api/health -k | python3 -m json.tool || echo "‚ùå Proxy nginx n√£o funciona"
else
    echo "‚ùå Servi√ßo n√£o est√° ativo"
    echo "√öltimos logs de erro:"
    journalctl -u team-manager-ai -n 20 --no-pager | grep -E "error|Error|fatal|Failed"
fi

echo -e "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "DIAGN√ìSTICO:"
if ! systemctl is-active --quiet team-manager-ai; then
    echo "‚ùå Microservi√ßo n√£o est√° rodando"
    echo "   Poss√≠veis causas:"
    echo "   - Erro de sintaxe no c√≥digo"
    echo "   - Porta 3001 j√° em uso"
    echo "   - Depend√™ncias faltando"
elif ! curl -s http://localhost:3001/health >/dev/null 2>&1; then
    echo "‚ùå Microservi√ßo rodando mas n√£o responde"
    echo "   Verificar logs para erros"
else
    echo "‚úÖ Microservi√ßo OK - verificar configura√ß√£o nginx"
fi

ENDSSH