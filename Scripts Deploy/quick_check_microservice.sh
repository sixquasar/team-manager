#!/bin/bash

# Verifica√ß√£o r√°pida do estado do microservi√ßo
SERVER="root@96.43.96.30"

echo "üîç VERIFICA√á√ÉO R√ÅPIDA - MICROSERVI√áO"
echo "====================================="
echo ""

ssh $SERVER << 'ENDSSH'
echo "1. Testando endpoint direto do microservi√ßo:"
echo "----------------------------------------"
curl -v http://localhost:3001/health 2>&1 | grep -E "HTTP|mode|status|< " || echo "‚ùå Microservi√ßo n√£o responde"

echo -e "\n2. Verificando se o servi√ßo est√° rodando:"
echo "----------------------------------------"
ps aux | grep -E "node.*server" | grep -v grep || echo "‚ùå Nenhum processo node rodando"

echo -e "\n3. Verificando porta 3001:"
echo "----------------------------------------"
netstat -tlnp | grep 3001 || ss -tlnp | grep 3001 || echo "‚ùå Porta 3001 n√£o est√° escutando"

echo -e "\n4. √öltimos logs do servi√ßo:"
echo "----------------------------------------"
journalctl -u team-manager-ai -n 20 --no-pager | tail -10

echo -e "\n5. Verificando arquivo server.js:"
echo "----------------------------------------"
if [ -f /var/www/team-manager-ai/src/server.js ]; then
    echo "Verificando conte√∫do (primeiras linhas):"
    head -5 /var/www/team-manager-ai/src/server.js
    echo "..."
    echo "Tem endpoint de auth? $(grep -c '/api/auth' /var/www/team-manager-ai/src/server.js) ocorr√™ncias"
else
    echo "‚ùå server.js n√£o existe!"
fi

echo -e "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "DIAGN√ìSTICO R√ÅPIDO:"
if ! netstat -tlnp 2>/dev/null | grep -q 3001 && ! ss -tlnp 2>/dev/null | grep -q 3001; then
    echo "‚ùå MICROSERVI√áO N√ÉO EST√Å RODANDO!"
    echo "   Execute: ./RESTORE_MICROSERVICE_COMPLETE.sh"
elif ! grep -q '/api/auth' /var/www/team-manager-ai/src/server.js 2>/dev/null; then
    echo "‚ùå MICROSERVI√áO EM MODO EMERG√äNCIA!"
    echo "   Execute: ./RESTORE_MICROSERVICE_COMPLETE.sh"
else
    echo "‚úÖ Microservi√ßo parece estar OK"
    echo "   Verifique o nginx proxy_pass"
fi
ENDSSH