import React, { useState } from 'react'

interface TeamMember {
  id: number
  name: string
  role: string
  department: string
  email: string
  status: 'active' | 'inactive'
}

function App() {
  const [members, setMembers] = useState<TeamMember[]>([
    {
      id: 1,
      name: 'João Silva',
      role: 'Desenvolvedor Senior',
      department: 'Tecnologia',
      email: 'joao.silva@empresa.com',
      status: 'active'
    },
    {
      id: 2,
      name: 'Maria Santos',
      role: 'Product Manager',
      department: 'Produto',
      email: 'maria.santos@empresa.com',
      status: 'active'
    }
  ])

  const [showAddForm, setShowAddForm] = useState(false)
  const [newMember, setNewMember] = useState({
    name: '',
    role: '',
    department: '',
    email: ''
  })

  const handleAddMember = (e: React.FormEvent) => {
    e.preventDefault()
    if (newMember.name && newMember.role && newMember.department && newMember.email) {
      setMembers([
        ...members,
        {
          id: Date.now(),
          ...newMember,
          status: 'active' as const
        }
      ])
      setNewMember({ name: '', role: '', department: '', email: '' })
      setShowAddForm(false)
    }
  }

  const toggleMemberStatus = (id: number) => {
    setMembers(members.map(member => 
      member.id === id 
        ? { ...member, status: member.status === 'active' ? 'inactive' : 'active' }
        : member
    ))
  }

  const deleteMember = (id: number) => {
    setMembers(members.filter(member => member.id !== id))
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-blue-600 text-white p-4 shadow-lg">
        <div className="container mx-auto flex justify-between items-center">
          <h1 className="text-2xl font-bold">Team Manager</h1>
          <button
            onClick={() => setShowAddForm(!showAddForm)}
            className="bg-blue-500 hover:bg-blue-400 px-4 py-2 rounded-lg transition-colors"
          >
            + Adicionar Membro
          </button>
        </div>
      </header>

      <main className="container mx-auto p-4">
        {showAddForm && (
          <div className="bg-white p-6 rounded-lg shadow-md mb-6">
            <h2 className="text-xl font-semibold mb-4">Adicionar Novo Membro</h2>
            <form onSubmit={handleAddMember} className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <input
                type="text"
                placeholder="Nome"
                value={newMember.name}
                onChange={(e) => setNewMember({ ...newMember, name: e.target.value })}
                className="border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
              <input
                type="text"
                placeholder="Cargo"
                value={newMember.role}
                onChange={(e) => setNewMember({ ...newMember, role: e.target.value })}
                className="border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
              <input
                type="text"
                placeholder="Departamento"
                value={newMember.department}
                onChange={(e) => setNewMember({ ...newMember, department: e.target.value })}
                className="border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
              <input
                type="email"
                placeholder="Email"
                value={newMember.email}
                onChange={(e) => setNewMember({ ...newMember, email: e.target.value })}
                className="border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
              <div className="md:col-span-2 flex gap-2">
                <button
                  type="submit"
                  className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition-colors"
                >
                  Salvar
                </button>
                <button
                  type="button"
                  onClick={() => setShowAddForm(false)}
                  className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors"
                >
                  Cancelar
                </button>
              </div>
            </form>
          </div>
        )}

        <div className="bg-white rounded-lg shadow-md overflow-hidden">
          <div className="p-4 border-b bg-gray-50">
            <h2 className="text-xl font-semibold">Membros da Equipe</h2>
          </div>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-100">
                <tr>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Nome</th>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Cargo</th>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Departamento</th>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Email</th>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Status</th>
                  <th className="px-4 py-3 text-left text-sm font-medium text-gray-700">Ações</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {members.map((member) => (
                  <tr key={member.id} className="hover:bg-gray-50">
                    <td className="px-4 py-3">{member.name}</td>
                    <td className="px-4 py-3">{member.role}</td>
                    <td className="px-4 py-3">{member.department}</td>
                    <td className="px-4 py-3">
                      <a href={`mailto:${member.email}`} className="text-blue-600 hover:underline">
                        {member.email}
                      </a>
                    </td>
                    <td className="px-4 py-3">
                      <span
                        className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                          member.status === 'active'
                            ? 'bg-green-100 text-green-800'
                            : 'bg-red-100 text-red-800'
                        }`}
                      >
                        {member.status === 'active' ? 'Ativo' : 'Inativo'}
                      </span>
                    </td>
                    <td className="px-4 py-3">
                      <div className="flex gap-2">
                        <button
                          onClick={() => toggleMemberStatus(member.id)}
                          className="text-blue-600 hover:text-blue-800 text-sm"
                        >
                          {member.status === 'active' ? 'Desativar' : 'Ativar'}
                        </button>
                        <button
                          onClick={() => deleteMember(member.id)}
                          className="text-red-600 hover:text-red-800 text-sm"
                        >
                          Excluir
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h3 className="text-lg font-semibold mb-2">Total de Membros</h3>
            <p className="text-3xl font-bold text-blue-600">{members.length}</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h3 className="text-lg font-semibold mb-2">Membros Ativos</h3>
            <p className="text-3xl font-bold text-green-600">
              {members.filter(m => m.status === 'active').length}
            </p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h3 className="text-lg font-semibold mb-2">Membros Inativos</h3>
            <p className="text-3xl font-bold text-red-600">
              {members.filter(m => m.status === 'inactive').length}
            </p>
          </div>
        </div>
      </main>
    </div>
  )
}

export default App